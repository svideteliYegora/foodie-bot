from datetime import datetime, timedelta

from vk_api import VkApi, VkUpload
from vk_api.utils import get_random_id
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from models import food_sdb

GROUP_ID = '224262397'
GROUP_TOKEN = 'vk1.a.O4b-gsCjTkGkgNgqChyB64QEGsHsxivBaZ-19GOTJo05tqLH9hB91HnfSrHEAl7AjirUJ9C2QLgdEAWlMZAQ2nydw9KEJltTGr-C9jB9PSwsBvy26FWwgtNs68n204RLxIFS_hkMBF8kkzsr97Sfj4IGE5LWvnvqJBpxEaj2oa0RiEsM77eyfSaCjKnl3tWrGfAmilLtteLYvYnchQaQYQ'
API_VERSION = '5.120'


def generation_karta_bluda(count,page,all_page):
    keyboard_karta_bluda = VkKeyboard(one_time=False, inline=True)
    keyboard_karta_bluda.add_callback_button(label='-1', color=VkKeyboardColor.PRIMARY, payload={"type": '-1'})
    keyboard_karta_bluda.add_callback_button(label=f'{count}', color=VkKeyboardColor.PRIMARY, payload={"type": 'count'})
    keyboard_karta_bluda.add_callback_button(label='+1', color=VkKeyboardColor.PRIMARY, payload={"type": '+1'})
    keyboard_karta_bluda.add_line()
    keyboard_karta_bluda.add_callback_button(label='–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', color=VkKeyboardColor.PRIMARY,
                                             payload={"type": 'add_in_bas'})
    keyboard_karta_bluda.add_line()
    keyboard_karta_bluda.add_callback_button(label='<', color=VkKeyboardColor.PRIMARY, payload={"type": '<'})
    keyboard_karta_bluda.add_callback_button(label=f'{page}\\{all_page}', color=VkKeyboardColor.PRIMARY, payload={"type": '–∑–∞–∫—É—Å–∫–∏'})
    keyboard_karta_bluda.add_callback_button(label='>', color=VkKeyboardColor.PRIMARY, payload={"type": '>'})
    keyboard_karta_bluda.add_line()
    keyboard_karta_bluda.add_button(label='–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', color=VkKeyboardColor.PRIMARY, payload={"type": '–∑–∞–∫—É—Å–∫–∏'})
    return keyboard_karta_bluda

print(food_sdb.get_records("order"))

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç
vk_session = VkApi(token=GROUP_TOKEN, api_version=API_VERSION)
vk = vk_session.get_api()
longpoll = VkBotLongPoll(vk_session, group_id=GROUP_ID)
upload=VkUpload(vk_session)


spravka_text = """
                üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –ö–æ–º–∞–Ω–¥–∞–º –ë–æ—Ç–∞:

                /addreview - –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –±–ª—é–¥–µ –∏–ª–∏ —Å–µ—Ä–≤–∏—Å–µ.
                /orders - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤ –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å.
                /basket - –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –±–ª—é–¥–∞–º–∏.
                /categories - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±–ª—é–¥ –≤ –º–µ–Ω—é.

                üåü –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ö–æ–º–∞–Ω–¥—ã:

                /start - –ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º.
                /help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É.

                üí° –ü—Ä–∞–≤–∏–ª–∞ –∏ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:

                –û—Ç–∑—ã–≤—ã: –ü—Ä–æ—Å–∏–º –≤–∞—Å –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—É—é –ª–µ–∫—Å–∏–∫—É –≤ –æ—Ç–∑—ã–≤–∞—Ö.

                –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ (–ß–°): –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–∞—Å—Ç—ã–µ –æ—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–æ–≤) –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –≤–Ω–µ—Å–µ–Ω–∏—é –≤ –ß–°.

                üö® –ü–æ–º–Ω–∏—Ç–µ:
                –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–∏ –æ—Ç–∑—ã–≤—ã, –Ω–æ –ø—Ä–æ—Å–∏–º –≤—ã—Ä–∞–∂–∞—Ç—å —Å–≤–æ–µ –º–Ω–µ–Ω–∏–µ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ.
                –ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–∞

                üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –ü–æ–¥–¥–µ—Ä–∂–∫–∏:
                üìß –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: support@example.com
                üì± –¢–µ–ª–µ—Ñ–æ–Ω: +123456789

                ü§ù –ú—ã –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –ª—É—á—à–∏–π –æ–ø—ã—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞. –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è! üçΩÔ∏è‚ú®
                –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ! üçΩÔ∏è‚ú®
            """

keyboard_start = VkKeyboard(one_time=False, inline=False)
keyboard_start.add_button(label='üçΩÔ∏è –ú–µ–Ω—é –ë–ª—é–¥', color=VkKeyboardColor.POSITIVE, payload={"type": "text"})
keyboard_start.add_line()
keyboard_start.add_button(label='üõí –ö–æ—Ä–∑–∏–Ω–∞', color=VkKeyboardColor.POSITIVE, payload={"type": "text"})
keyboard_start.add_line()
keyboard_start.add_button(label='üöö –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã', color=VkKeyboardColor.POSITIVE, payload={"type": "text"})
keyboard_start.add_line()
keyboard_start.add_button(label='‚úèÔ∏è –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤', color=VkKeyboardColor.POSITIVE, payload={"type": "text"})
keyboard_start.add_line()
keyboard_start.add_button(label='‚ùì  –°–ø—Ä–∞–≤–∫–∞', color=VkKeyboardColor.POSITIVE, payload={"type": "text"})

keyboard_basket=VkKeyboard(one_time=False, inline=True)
keyboard_basket.add_callback_button(label='–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', color=VkKeyboardColor.PRIMARY, payload={"type": 'add_order'})
keyboard_basket.add_line()
keyboard_basket.add_callback_button(label='–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É', color=VkKeyboardColor.PRIMARY, payload={"type": 'clear_basket'})

keybord_add_order=VkKeyboard(one_time=False,inline=True)
keybord_add_order.add_callback_button(label='–ü–æ–¥–≤–µ—Ä–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ', color=VkKeyboardColor.PRIMARY, payload={"type": 'yes_data'})
keybord_add_order.add_line()
keybord_add_order.add_callback_button(label='–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ', color=VkKeyboardColor.PRIMARY, payload={"type": 'no_data'})

keybord_payment_method=VkKeyboard(one_time=False,inline=True)
keybord_payment_method.add_callback_button(label='–ü–æ –∫–∞—Ä—Ç–µ', color=VkKeyboardColor.PRIMARY, payload={"type": '–ø–æ –∫–∞—Ä—Ç–µ'})
keybord_payment_method.add_line()
keybord_payment_method.add_callback_button(label='–ù–∞–ª–∏—á–Ω—ã–º–∏', color=VkKeyboardColor.PRIMARY, payload={"type": '–Ω–∞–ª–∏—á–Ω—ã–º–∏'})


keybord_update_user_data=VkKeyboard(one_time=False,inline=True)
keybord_update_user_data.add_callback_button(label='–ò–º—è', color=VkKeyboardColor.PRIMARY, payload={"type": '–∏–º—è'})
keybord_update_user_data.add_line()
keybord_update_user_data.add_callback_button(label='–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', color=VkKeyboardColor.PRIMARY, payload={"type": '—Ç–µ–ª–µ—Ñ–æ–Ω'})
keybord_update_user_data.add_line()
keybord_update_user_data.add_callback_button(label='–ê–¥—Ä–µ—Å', color=VkKeyboardColor.PRIMARY, payload={"type": '–∞–¥—Ä–µ—Å'})

dishes_categories=food_sdb.get_uniq_cats()
keyboard_menu_blud = VkKeyboard(one_time=False, inline=True)
for i in range(len(dishes_categories)):
    if i==len(dishes_categories)-1:
        keyboard_menu_blud.add_callback_button(label=dishes_categories[i], color=VkKeyboardColor.PRIMARY, payload={"type": dishes_categories[i]})
    else:
        keyboard_menu_blud.add_callback_button(label=dishes_categories[i], color=VkKeyboardColor.PRIMARY, payload={"type": dishes_categories[i]})
        keyboard_menu_blud.add_line()


keyboard_comment = VkKeyboard(one_time=False, inline=True)
keyboard_comment.add_callback_button(label="–ù–∞ –∑–∞–∫–∞–∑", color=VkKeyboardColor.PRIMARY, payload={"type": "order_comment"})
keyboard_comment.add_line()
keyboard_comment.add_callback_button(label="–ù–∞ –±–ª—é–¥–æ", color=VkKeyboardColor.PRIMARY, payload={"type": "good_comment"})

keybord_rating=VkKeyboard(one_time=False,inline=True)
keybord_rating.add_callback_button(label='üåüüåüüåüüåüüåü', color=VkKeyboardColor.PRIMARY, payload={"type": '5'})
keybord_rating.add_line()
keybord_rating.add_callback_button(label='üåüüåüüåüüåü', color=VkKeyboardColor.PRIMARY, payload={"type": '4'})
keybord_rating.add_line()
keybord_rating.add_callback_button(label='üåüüåüüåü', color=VkKeyboardColor.PRIMARY, payload={"type": '3'})
keybord_rating.add_line()
keybord_rating.add_callback_button(label='üåüüåü', color=VkKeyboardColor.PRIMARY, payload={"type": '2'})
keybord_rating.add_line()
keybord_rating.add_callback_button(label='üåü', color=VkKeyboardColor.PRIMARY, payload={"type": '1'})


start_comands = ["start", "–Ω–∞—á–∞—Ç—å", "—Å—Ç–∞—Ä—Ç", "–Ω–∞—á–∞–ª–æ", "–±–æ—Ç"]
image='pfsta.jpg'
count = 0
page = 1
step=0
update_data=False
add_ord_comment=False
add_good_comment=False
del_order=False
order_num_for_del=0
order_id_for_com=0
good_id_for_com=0
data_for_update=''
val=''

new_user_dict={}

for event in longpoll.listen():

    if event.type == VkBotEventType.MESSAGE_NEW:

        if event.obj.message['text'].lower() in start_comands:
            users_list=food_sdb.get_vk_ids()

            if event.obj.message['from_id'] in users_list:
                user=food_sdb.get_urecord_vk(event.obj.message['from_id'])

                attachments=[]
                upload_image=upload.photo_messages(photos=image)[0]
                attachments.append("photo{}_{}".format(upload_image['owner_id'],upload_image['id']))

                vk.messages.send(
                    user_id=event.obj.message['from_id'],
                    random_id=get_random_id(),
                    peer_id=event.obj.message['from_id'],
                    keyboard=keyboard_start.get_keyboard(),
                    message=f"""
                            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç, {user['name']}! üåü 
                            –ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –∑–¥–µ—Å—å. –ì–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å —Å –≤—ã–±–æ—Ä–æ–º –±–ª—é–¥ –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∑–∞–∫–∞–∑–∞. 
                            –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è?
                            """,
                    )
            elif event.obj.message['from_id'] not in users_list:
                vk.messages.send(
                                user_id=event.obj.message['from_id'],
                                random_id=get_random_id(),
                                peer_id=event.obj.message['from_id'],
                                message='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å! üòä –î–∞–≤–∞–π—Ç–µ —Å –≤–∞–º–∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è!')

                vk.messages.send(
                    user_id=event.obj.message['from_id'],
                    random_id=get_random_id(),
                    peer_id=event.obj.message['from_id'],
                    message='üåü –ö–∞–∫ –º–Ω–µ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è? –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è.')

                step+=1

        elif event.obj.message['text'] not in start_comands and step==1:

            new_user_dict['black_list']=False
            new_user_dict['vk_id']=event.obj.message['from_id']

            new_user_dict['name']=event.obj.message['text']
            step+=1

            vk.messages.send(
                user_id=event.obj.message['from_id'],
                random_id=get_random_id(),
                peer_id=event.obj.message['from_id'],
                message='üéÇ –°–ø–∞—Å–∏–±–æ! –ê —Å–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç? –ù–∞–º –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç.')

        elif event.obj.message['text'] not in start_comands and step == 2:

            try:
                int(event.obj.message['text'])
                new_user_dict['age'] = event.obj.message['text']
                step += 1

                vk.messages.send(
                    user_id=event.obj.message['from_id'],
                    random_id=get_random_id(),
                    peer_id=event.obj.message['from_id'],
                    message="–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞—é.")

            except:
                vk.messages.send(
                    user_id=event.obj.message['from_id'],
                    random_id=get_random_id(),
                    peer_id=event.obj.message['from_id'],
                    message='–í–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ.')
        
        elif event.obj.message['text'] not in start_comands and step == 3:

            phone_val="'{0}'[0]=='+' and '{0}'[1:].isdigit() and len('{0}')==13"

            if eval(phone_val.format(event.obj.message['text']))==True:
                new_user_dict['phone']=event.obj.message['text']
                step+=1

                vk.messages.send(
                    user_id=event.obj.message['from_id'],
                    random_id=get_random_id(),
                    peer_id=event.obj.message['from_id'],
                    message='üè° –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! –î–ª—è —É—Å–ø–µ—à–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞–º –Ω—É–∂–µ–Ω –≤–∞—à –∞–¥—Ä–µ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥, —É–ª–∏—Ü—É, –Ω–æ–º–µ—Ä –¥–æ–º–∞, –ø–æ–¥—ä–µ–∑–¥ –∏ –∫–≤–∞—Ä—Ç–∏—Ä—É, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ.')

            else:
                vk.messages.send(
                    user_id=event.obj.message['from_id'],
                    random_id=get_random_id(),
                    peer_id=event.obj.message['from_id'],
                    message='–í–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ.')

        elif event.obj.message['text'] not in start_comands and step == 4:

            new_user_dict['delivery_address'] = event.obj.message['text']
            step += 1

            vk.messages.send(
                user_id=event.obj.message['from_id'],
                random_id=get_random_id(),
                peer_id=event.obj.message['from_id'],
                keyboard=keyboard_start.get_keyboard(),
                message='üéâ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –µ—Å—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ. –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ! –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –µ—â—ë –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å —Å–æ–æ–±—â–∏—Ç—å –Ω–∞–º. –ú—ã –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!')

            food_sdb.add_record("user",**new_user_dict)
            step=0
            new_user_dict={}

        elif event.obj.message['text'] not in start_comands and update_data == True:
            food_sdb.update_record("user",{f'{data_for_update}':event.obj.message['text']},id=user['id'])
            update_data=False
            user=food_sdb.get_urecord_vk(event.obj.message['from_id'])
            vk.messages.send(
                user_id=event.obj.message['from_id'],
                random_id=get_random_id(),
                peer_id=event.obj.message['from_id'],
                keyboard=keybord_add_order.get_keyboard(),
                message=f"""
                            –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏, –≤–µ—Ä–Ω—ã –ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Å–≤–µ–¥–µ–Ω–∏—è:
                            –ò–º—è: {user['name']}
                            –¢–µ–ª–µ—Ñ–æ–Ω: {user['phone']}
                            –ê–¥—Ä–µ—Å: {user['delivery_address']}
                            –ï—Å–ª–∏ –µ—Å—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, 
                            –¥–∞–π –∑–Ω–∞—Ç—å, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
                            –°–ø–∞—Å–∏–±–æ!
                        """)

        elif event.obj.message['text'] == 'üçΩÔ∏è –ú–µ–Ω—é –ë–ª—é–¥' or event.obj.message['text'] == "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏":
            vk.messages.send(
                user_id=event.obj.message['from_id'],
                random_id=get_random_id(),
                peer_id=event.obj.message['from_id'],
                keyboard=keyboard_menu_blud.get_keyboard(),
                message='–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±–ª—é–¥ üçïüç£ü•óüçùüç®')

        elif event.obj.message['text'] == 'üõí –ö–æ—Ä–∑–∏–Ω–∞':

            basket=food_sdb.get_basket_vk(event.obj.message['from_id'])

            if len(basket)==0:
                vk.messages.send(
                    user_id=event.obj.message['from_id'],
                    random_id=get_random_id(),
                    peer_id=event.obj.message['from_id'],
                    message="""üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫–∞ –ø—É—Å—Ç–∞!
                                –ó–∞–≥–ª—è–Ω–∏—Ç–µ –≤ –Ω–∞—à–µ –º–µ–Ω—é –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –Ω–µ–µ —Å–≤–æ–∏ –ª—é–±–∏–º—ã–µ –±–ª—é–¥–∞. 
                                –ú—ã —É–≤–µ—Ä–µ–Ω—ã, —É –Ω–∞—Å –µ—Å—Ç—å —á—Ç–æ-—Ç–æ –≤–∫—É—Å–Ω–æ–µ –¥–ª—è –≤–∞—Å! 
                                –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –¥–∞–π—Ç–µ –Ω–∞–º –∑–Ω–∞—Ç—å.
                                –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–∏–º –±–ª—é–¥–∞–º! üçΩÔ∏èüåü
                            """)
            else:
                vk.messages.send(
                    user_id=event.obj.message['from_id'],
                    random_id=get_random_id(),
                    peer_id=event.obj.message['from_id'],
                    message="üõí **–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:**")

                order_price=0
                max_time=0
                spisok_tovarov=""
                for i in range(len(basket)):
                    order_price=float(basket[i]['total_price'])+order_price
                    if max_time<int(basket[i]['good_id']['cooking_time']):
                        max_time=int(basket[i]['good_id']['cooking_time'])
                    spisok_tovarov+=f"{basket[i]['good_id']['name']}: {basket[i]['amount']} —à—Ç.\n"
                    vk.messages.send(
                        user_id=event.obj.message['from_id'],
                        random_id=get_random_id(),
                        peer_id=event.obj.message['from_id'],
                        message=f"""
                                    {i+1}. üçî **{basket[i]['good_id']['name']}**
                                    –§–û–¢–û–ì–†–ê–§–ò–Ø
                                    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {basket[i]['amount']}
                                    C—Ç–æ–∏–º–æ—Å—Ç—å: {basket[i]['total_price']} BUN
                                """)

                vk.messages.send(
                    user_id=event.obj.message['from_id'],
                    random_id=get_random_id(),
                    peer_id=event.obj.message['from_id'],
                    keyboard=keyboard_basket.get_keyboard(),
                    message=f"""
                            **–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {order_price} BUN**
                            –ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.
                            –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –¥–∞–π—Ç–µ –Ω–∞–º –∑–Ω–∞—Ç—å.
                            –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑! üöÄ
                            """)

        elif event.obj.message['text'] == 'üöö –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã':
            ords=food_sdb.get_uactive_order_vk(event.obj.message['from_id'])

            if len(ords)==0:
                vk.messages.send(
                    user_id=event.obj.message['from_id'],
                    random_id=get_random_id(),
                    peer_id=event.obj.message['from_id'],
                    message="–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤!")
            else:
                vk.messages.send(
                    user_id=event.obj.message['from_id'],
                    random_id=get_random_id(),
                    peer_id=event.obj.message['from_id'],
                    message="üõí –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã üöö")

                for i in range(len(ords)):

                    keyboard_otmena_z = VkKeyboard(one_time=False, inline=True)
                    keyboard_otmena_z.add_callback_button(label="–û—Ç–º–µ–Ω–∏—Ç—å", color=VkKeyboardColor.PRIMARY,
                                                          payload={"type": f"del_ord {ords[i]['order_number']}" })

                    vk.messages.send(
                        user_id=event.obj.message['from_id'],
                        random_id=get_random_id(),
                        peer_id=event.obj.message['from_id'],
                        keyboard=keyboard_otmena_z.get_keyboard(),
                        message=f"""
                                    –ó–∞–∫–∞–∑ #{ords[i]['order_number']}
                                    üìÖ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∑–∞–∫–∞–∑–∞: {ords[i]['order_time']}
                                    
                                    ‚è∞ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏:
                                    {ords[i]['delivery_time']}
                                    
                                    üçΩÔ∏è –ë–ª—é–¥–∞:
                        
                                    - {ords[i]['basket_id'][0]['good_id']['name']}-{ords[i]['basket_id'][0]['amount']} —à—Ç.
                                    
                                    –°—É–º–º–∞: {ords[i]['order_price']} BUN
                                    """)

        elif event.obj.message['text'] not in start_comands and del_order == True:

            del_order=False
            food_sdb.update_record("order",{'status':'–û—Ç–º–µ–Ω–µ–Ω','cancellation_reason':event.obj.message['text']},order_number=order_num_for_del)
            vk.messages.send(
                user_id=event.obj.message['from_id'],
                random_id=get_random_id(),
                peer_id=event.obj.message['from_id'],
                message="–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–≤–µ—Ç! –ë—É–¥–µ–º –∂–∞–¥—Ç—å –æ—Ç –≤–∞—Å –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤!")

        elif event.obj.message['text'] == '‚úèÔ∏è –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤':

            vk.messages.send(
                user_id=event.obj.message['from_id'],
                random_id=get_random_id(),
                peer_id=event.obj.message['from_id'],
                keyboard=keyboard_comment.get_keyboard(),
                message="–ù–∞ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤?")

        elif event.obj.message['text'] not in start_comands and add_ord_comment == True:
            food_sdb.update_record("ordercomment", {'text':event.obj.message['text']},
                                   order_number_id=order_id_for_com)
            add_ord_comment=False

        elif event.obj.message['text'] not in start_comands and add_good_comment == True:
            food_sdb.update_record("goodcomment", {'text':event.obj.message['text']},
                                   good_id=good_id_for_com)
            add_good_comment=False


    elif event.type == VkBotEventType.MESSAGE_EVENT:
        if event.object.payload.get('type') in dishes_categories:

            bluda_from_cat=food_sdb.get_goods_by_cat(event.object.payload.get('type'))

            available=''
            if bluda_from_cat[page-1]['available']==True:
                available='–ï—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏'
            else:
                available='–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'

            last_id = vk.messages.edit(
                peer_id=event.obj.peer_id,
                message=f"""
                        {bluda_from_cat[page - 1]['name']}
                        {bluda_from_cat[page-1]['description']}
                        –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {bluda_from_cat[page - 1]['cooking_time']} –º–∏–Ω.
                        –¶–µ–Ωa: {bluda_from_cat[page - 1]['price']}
                        {available}
                        """,
                conversation_message_id=event.obj.conversation_message_id,
                keyboard=generation_karta_bluda(count,page,len(bluda_from_cat)).get_keyboard(),
                attachment=','.join(attachments))

        elif event.object.payload.get('type') == "+1":

            count+=1

            last_id = vk.messages.edit(
                peer_id=event.obj.peer_id,
                message=f"""
                        {bluda_from_cat[page - 1]['name']}
                        {bluda_from_cat[page - 1]['description']}
                        –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {bluda_from_cat[page - 1]['cooking_time']} –º–∏–Ω.
                        –¶–µ–Ωa: {bluda_from_cat[page - 1]['price']}
                        {available}
                        """,
                conversation_message_id=event.obj.conversation_message_id,
                keyboard=generation_karta_bluda(count, page, len(bluda_from_cat)).get_keyboard(),
                attachment=','.join(attachments))

        elif event.object.payload.get('type') == "-1":
            if count > 0:
                count -= 1

                last_id = vk.messages.edit(
                    peer_id=event.obj.peer_id,
                    message=f"""
                    {bluda_from_cat[page - 1]['name']}
                    {bluda_from_cat[page - 1]['description']}
                    –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {bluda_from_cat[page - 1]['cooking_time']} –º–∏–Ω.
                    –¶–µ–Ωa: {bluda_from_cat[page - 1]['price']}
                    {available}
                    """,
                    conversation_message_id=event.obj.conversation_message_id,
                    keyboard=generation_karta_bluda(count, page, len(bluda_from_cat)).get_keyboard(),
                    attachment=','.join(attachments))
            else:
                print("–Ω–µ–ª—å–∑—è —Å–æ—Ç–≤–æ—Ä–∏—Ç—å –∑–¥–µ—Å—å")

        elif event.object.payload.get('type') == ">":

            if page<len(bluda_from_cat):
                count = 0
                page+=1

                last_id = vk.messages.edit(
                    peer_id=event.obj.peer_id,
                    message=f"""
                            {bluda_from_cat[page - 1]['name']}
                            {bluda_from_cat[page - 1]['description']}
                            –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {bluda_from_cat[page - 1]['cooking_time']} –º–∏–Ω.
                            –¶–µ–Ωa: {bluda_from_cat[page - 1]['price']}
                            {available}
                            """,
                    conversation_message_id=event.obj.conversation_message_id,
                    keyboard=generation_karta_bluda(count, page, len(bluda_from_cat)).get_keyboard(),
                    attachment=','.join(attachments))

        elif event.object.payload.get('type') == "<":

            if page > 1:
                count = 0
                page -= 1

                last_id = vk.messages.edit(
                    peer_id=event.obj.peer_id,
                    message=f"""
                                {bluda_from_cat[page - 1]['name']}
                                {bluda_from_cat[page - 1]['description']}
                                –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {bluda_from_cat[page - 1]['cooking_time']} –º–∏–Ω.
                                –¶–µ–Ωa: {bluda_from_cat[page - 1]['price']}
                                {available}
                                """,
                    conversation_message_id=event.obj.conversation_message_id,
                    keyboard=generation_karta_bluda(count, page, len(bluda_from_cat)).get_keyboard(),
                    attachment=','.join(attachments))

        elif event.object.payload.get('type') == "add_in_bas":

            food_sdb.add_record('basket',amount=count,total_price=count*bluda_from_cat[page-1]['price'],user_id=user['id'],good_id=bluda_from_cat[page-1]['id'],added_to_order=0)
            vk.messages.send(
                user_id=event.obj.peer_id,
                random_id=get_random_id(),
                peer_id=event.obj.peer_id,
                message="–ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É")

        elif event.object.payload.get('type') == "add_order":

            last_id = vk.messages.edit(
                peer_id=event.obj.peer_id,
                message=f"""
                            –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏, –≤–µ—Ä–Ω—ã –ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Å–≤–µ–¥–µ–Ω–∏—è:
                            –ò–º—è: {user['name']}
                            –¢–µ–ª–µ—Ñ–æ–Ω: {user['phone']}
                            –ê–¥—Ä–µ—Å: {user['delivery_address']}
                            –ï—Å–ª–∏ –µ—Å—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, 
                            –¥–∞–π –∑–Ω–∞—Ç—å, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
                            –°–ø–∞—Å–∏–±–æ!
                        """,
                conversation_message_id=event.obj.conversation_message_id,
                keyboard=keybord_add_order.get_keyboard())

        elif event.object.payload.get('type') == "clear_basket":
            for i in range(len(basket)):
                food_sdb.delete_record("basket",user_id=basket[i]['user_id']['id'])

        elif event.object.payload.get('type') == "yes_data":
            last_id = vk.messages.edit(
                peer_id=event.obj.peer_id,
                message="–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:",
                conversation_message_id=event.obj.conversation_message_id,
                keyboard=keybord_payment_method.get_keyboard())

        elif event.object.payload.get('type') == "no_data":
            last_id = vk.messages.edit(
                peer_id=event.obj.peer_id,
                message="""
                            –ö–æ–Ω–µ—á–Ω–æ, –º—ã –≥–æ—Ç–æ–≤—ã –æ–±–Ω–æ–≤–∏—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ.
                            –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ, –∫–∞–∫–∏–µ –∏–º–µ–Ω–Ω–æ —Å–≤–µ–¥–µ–Ω–∏—è –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å, 
                            –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. 
                            –ë—É–¥–µ–º —Ä–∞–¥—ã –ø–æ–º–æ—á—å!
                        """,
                conversation_message_id=event.obj.conversation_message_id,
                keyboard=keybord_update_user_data.get_keyboard())


        elif event.object.payload.get('type') in ("–ø–æ –∫–∞—Ä—Ç–µ","–Ω–∞–ª–∏—á–Ω—ã–º–∏"):
            order_time=datetime.now()

            last_id = vk.messages.edit(
                peer_id=event.obj.peer_id,
                message=f"""
                            üåü –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑! üåü

                            –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:
                            ---------------------
                            üìÖ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∑–∞–∫–∞–∑–∞: {order_time}
                            üíº –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: #{1}
                            
                            üõçÔ∏è –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–∫–∞–∑–∞:
                            ---------------------
                            {spisok_tovarov}
                            
                            üí≥ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {order_price} BUN
                            
                            üìç –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {user['delivery_address']}
                            
                            üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä:
                            {user['phone']}
                            
                            üì¢ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: {event.object.payload.get('type')}
                            
                            üöÄ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: –í –æ–±—Ä–∞–±–æ—Ç–∫–µ
                            
                            üìå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –æ—Ç –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏.
                            
                            –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞ –∏ –æ—Ç–ª–∏—á–Ω–æ–≥–æ –¥–Ω—è! üåÆüöö
                        """,
                conversation_message_id=event.obj.conversation_message_id)

            orders=food_sdb.get_records("order")
            food_sdb.add_record("order",order_time=order_time,delivery_time=order_time+timedelta(hours=0, minutes=max_time+30),order_price=order_price,status="–≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ",payment_method=event.object.payload.get('type'),user_id=user['id'],basket_id=basket[0]['id'],user_name=user['name'],age=user['age'],phone=user['phone'],delivery_address=user['delivery_address'],order_number=orders[len(orders)-1]['id']+1)

            for i in range(len(basket)):
                food_sdb.update_record("basket", {'added_to_order':1},id=basket[i]['id'])

        elif event.object.payload.get('type') in ("–∏–º—è","—Ç–µ–ª–µ—Ñ–æ–Ω","–∞–¥—Ä–µ—Å"):
            if event.object.payload.get('type')=="–∏–º—è":
                data_for_update="name"
            elif event.object.payload.get('type')=="—Ç–µ–ª–µ—Ñ–æ–Ω":
                data_for_update="phone"
            else:
                data_for_update="delivery_address"
            update_data=True
            last_id = vk.messages.edit(
                peer_id=event.obj.peer_id,
                message=f"–í–≤–µ–¥–∏—Ç–µ {event.object.payload.get('type')}",
                conversation_message_id=event.obj.conversation_message_id)

        elif event.object.payload.get('type')=="order_comment":

            delivered_order=food_sdb.get_delivered_order_vk(user["vk_id"])

            last_id = vk.messages.edit(
                peer_id=event.obj.peer_id,
                message=f"–í–∞—à–∏ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã",
                conversation_message_id=event.obj.conversation_message_id)

            for i in range(len(delivered_order)):
                keyboard_add_comment = VkKeyboard(one_time=False, inline=True)
                keyboard_add_comment.add_callback_button(label="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", color=VkKeyboardColor.PRIMARY,
                                                         payload={"type": f"add_ord_com {delivered_order[i]['id']}"})

                vk.messages.send(
                    user_id=event.obj.peer_id,
                    random_id=get_random_id(),
                    peer_id=event.obj.peer_id,
                    keyboard=keyboard_add_comment.get_keyboard(),
                    message=f"–ó–∞–∫–∞–∑ –Ω–æ–º–µ—Ä {delivered_order[i]['order_number']}")


        elif event.object.payload.get('type') == "good_comment":

            goods=food_sdb.get_uordered_goods_vk(user['vk_id'])

            last_id = vk.messages.edit(
                peer_id=event.obj.peer_id,
                message=f"–í–æ—Ç –±–ª—é–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∑–∞–∫–∞–∑—ã–≤–∞–ª–∏",
                conversation_message_id=event.obj.conversation_message_id)

            for i in range(len(goods)):
                keyboard_add_comment = VkKeyboard(one_time=False, inline=True)
                keyboard_add_comment.add_callback_button(label="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", color=VkKeyboardColor.PRIMARY,
                                                         payload={"type": f"add_good_com {goods[i]['id']}"})

                vk.messages.send(
                    user_id=event.obj.peer_id,
                    random_id=get_random_id(),
                    peer_id=event.obj.peer_id,
                    keyboard=keyboard_add_comment.get_keyboard(),
                    message=f"{goods[i]['name']}")


        elif event.object.payload.get('type').split()[0] == "del_ord":
            order_num_for_del= int(event.object.payload.get('type').split()[1])
            vk.messages.send(
                user_id=event.obj.peer_id,
                random_id=get_random_id(),
                peer_id=event.obj.peer_id,
                message=f"–ó–∞–∫–∞–∑ {event.object.payload.get('type').split()[1]} –æ—Ç–º–µ–Ω–µ–Ω")

            vk.messages.send(
                user_id=event.obj.peer_id,
                random_id=get_random_id(),
                peer_id=event.obj.peer_id,
                message=f"–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–∞")

            del_order=True

        elif event.object.payload.get('type').split()[0] == "add_ord_com":
            val='order'
            order_id_for_com=int(event.object.payload.get('type').split()[1])
            vk.messages.send(
                user_id=event.obj.peer_id,
                random_id=get_random_id(),
                peer_id=event.obj.peer_id,
                keyboard=keybord_rating.get_keyboard(),
                message="–ù–∞ —Å–∫–æ–ª—å–∫–æ –≤—ã –æ—Ü–µ–Ω–∏—Ç–µ –∑–∞–∫–∞–∑")

        elif event.object.payload.get('type').split()[0] == "add_good_com":
            val="good"
            good_id_for_com=int(event.object.payload.get('type').split()[1])
            vk.messages.send(
                user_id=event.obj.peer_id,
                random_id=get_random_id(),
                peer_id=event.obj.peer_id,
                keyboard=keybord_rating.get_keyboard(),
                message="–ù–∞ —Å–∫–æ–ª—å–∫–æ –≤—ã –æ—Ü–µ–Ω–∏—Ç–µ –∑–∞–∫–∞–∑")


        elif event.object.payload.get('type') in ("1","2","3","4","5"):

            if val=='order':

                food_sdb.add_record("ordercomment",eval=event.object.payload.get('type'),user_id=user['id'],order_number_id=int(order_id_for_com))
                add_ord_comment=True

                vk.messages.send(
                    user_id=event.obj.peer_id,
                    random_id=get_random_id(),
                    peer_id=event.obj.peer_id,
                    message="–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É")
            elif val=="good":
                food_sdb.add_record("goodcomment", eval=event.object.payload.get('type'), user_id=user['id'],
                                    good_id=int(good_id_for_com))
                add_good_comment = True

                vk.messages.send(
                    user_id=event.obj.peer_id,
                    random_id=get_random_id(),
                    peer_id=event.obj.peer_id,
                    message="–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –±–ª—é–¥—É")





